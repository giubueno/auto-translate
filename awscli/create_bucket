#!/bin/bash

# Check if the bucket name is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <bucket-name>"
    exit 1
fi

# Variables
BUCKET_NAME="$1"  # Unique bucket name using a timestamp
REGION=$(aws configure get region)

# Create S3 Bucket
echo "Creating S3 bucket: $BUCKET_NAME at region $REGION"

# Check if the bucket exists, if not, create it
if ! aws s3 ls "s3://$BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
    echo "Bucket $BUCKET_NAME already exists."
else
    echo "Creating bucket: $BUCKET_NAME"
    aws s3 mb "s3://$BUCKET_NAME"
fi


# Check if the previous command exited with a non-zero status
if [ $? -ne 0 ]; then
    echo "An error occurred. Exiting..."
    exit 1
fi


# Wait for bucket to be created
echo "Waiting for bucket creation to complete..."
sleep 5

# Create input and output folders in the S3 bucket
echo "Creating input and output folders in the S3 bucket"
aws s3api put-object --bucket $BUCKET_NAME --key input/ > /dev/null
aws s3api put-object --bucket $BUCKET_NAME --key output/ > /dev/null
echo "Input and output folders created successfully."

# Define the bucket policy allowing AWS Translate service to access the bucket
BUCKET_POLICY=$(cat <<EOM
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowAWSServiceAccess",
            "Effect": "Allow",
            "Principal": {
                "Service": ["translate.amazonaws.com", "translate.aws.internal"]
            },
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::$BUCKET_NAME",
                "arn:aws:s3:::$BUCKET_NAME/*"
            ]
        }
    ]
}
EOM
)

# Apply the bucket policy
echo "Applying bucket policy to allow AWS Translate service access"
aws s3api put-bucket-policy --bucket $BUCKET_NAME --policy "$BUCKET_POLICY" > /dev/null

echo "Bucket $BUCKET_NAME created and policy applied successfully."

# Get the bucket URL
BUCKET_URL="https://s3-$REGION.amazonaws.com/$BUCKET_NAME"
echo "Bucket URL: $BUCKET_URL"